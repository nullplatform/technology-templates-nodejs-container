trigger:
- master

pool: 'Default'

variables:
- name: npBuildStatus
  value: 'failed'
- group: nullplatform

steps:

- task: NullplatformLogin@0
  inputs:
    apiKey: '$(NULLPLATFORM_API_KEY)'
  name: NullplatformLogin

- task: NullplatformMetadata@0 
  inputs:
    resource: application
  name: NullPlatformApplicationMetadata

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $applicationsMetadata = ConvertFrom-Json -InputObject '$(NullPlatformApplicationMetadata.metadata)'
      $applicationId = $applicationsMetadata[0].id
      $applicationName = $applicationsMetadata[0].name
      Write-Host "##vso[task.setvariable variable=applicationId]$applicationId"
      Write-Host "##vso[task.setvariable variable=applicationName]$applicationName"
  displayName: 'Save first application into build context'

- task: NullplatformBuild@0
  inputs:
    action: create
    status: pending
    applicationId: '$(applicationId)'
  name: CreateBuild
  displayName: "Creating build in Nullplatform"

- task: NullplatformBuild@0
  inputs:
    action: update
    id: $(CreateBuild.id)
    status: in_progress
  name: UpdateBuild
  displayName: "Update build in Nullplatform"
  
- task: NullplatformParameter@0
  inputs:
    applicationId: $(applicationId)
  name: NullplatformApplicationParameters
  displayName: "Get Nullplatform build parameters"

- task: NullplatformAsset@0
  inputs:
    buildId: $(CreateBuild.id)
    action: create
    type: 'docker-image'
  name: Asset
  displayName: "Create asset for build"

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $assetTargets = ConvertFrom-Json -InputObject '$(Asset.targets)'
      $assetTargetUrl = $assetTargets[0].url
      Write-Host "##vso[task.setvariable variable=assetTargetUrl]$assetTargetUrl"
  displayName: 'Save asset target into build context'

- script: |
    export AWS_ACCESS_KEY_ID="$(NullplatformApplicationParameters.BUILD_AWS_ACCESS_KEY)"
    export AWS_SECRET_ACCESS_KEY="$(NullplatformApplicationParameters.BUILD_AWS_SECRET_ACCESS_KEY)"
    export AWS_DEFAULT_REGION="$(NullplatformApplicationParameters.BUILD_AWS_REGION)"
    export ECR_REGISTRY=$(echo "$(assetTargetUrl)" | cut -d '/' -f 1)
    aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
    docker build -t $(Asset.name) .
    docker tag $(Asset.name) $(assetTargetUrl)
    docker push $(assetTargetUrl)
    echo "##vso[task.setvariable variable=npBuildStatus]successful"
  displayName: 'Build and push docker image'

- task: NullplatformBuild@0
  inputs:
    action: update
    id: $(CreateBuild.id)
    status: $(npBuildStatus)
  name: FinalizeBuild
  displayName: "Finalize Nullplatform build"
  condition: always()
